An overview of system architecture is depicted in Fig. 6.3. An overview of system architecture includes four major components: RSM Schema Definition Module, Resource Opera-tion Input Module, RSM Schema Tree Module, and Physical Storage Space Module.  
RSM Schema Definition Module is responsible for the input of RSM schema in the format of RS(X0(C00, C01, ..., C0p), X1(C10, C11, ..., C1q),  ..., Xn-1(Cn-1 0, Cn-1 1, ..., Cn-1 r)). We use C(C0, ..., Ct) to represent the hierar-chy relationships between parent concept C and parent concept C's child concepts C0 to Ct. 
Fig. 6.4 depicts an example of RS(X(C1(C11, C12, C13), C2(C21, C22)), Y(C3(C31, C32), C4(C41, C42)), where C2(C21, C22) means concept C2 is the super-concept of C21 and C22. Point P contains resource r1 and r2 both of which belong to the classification “X=C21, Y=C41”. 
Resource Operation Input Module is responsible for the input of re-source operation from users. Five major kinds of resource operations are considered here: insertion, deletion, modification, exact query and range query. Five major kinds of resource operations are expressed by users who only know RSM schema but not the underlying storage format. In this sense, the resource query “X=C1, Y=C2” is equivalent to the query “Y=C2, X=C1”. 
RSM Schema Tree Module encodes the input RSM schema into bit strings which preserve all hierarchy semantics between concepts. In this way, a one-to--one mapping is set up between RSM concepts and bit strings, and stored in a single disk file. If a single disk file is small, load a single disk file into in-ternal memory before doing resource operations. Otherwise, build up an index in the head of a single disk file which will be loaded into internal memory instead of a single disk file. an index should well support the search for bit string given concept as well as the search for concept given bit string. RSM Schema Tree Module also sends related RSM information to Physical Storage Space Module to help the initialization of the underlying indexing structure C-tree. RSM Schema Tree Module transforms the resource operations input from Resource Operation Input Module into the format of the underlying storage. 
Physical Storage Space Module is responsible for the creation and maintenance of C-tree.  C-tree is stored in a single disk file. Each node corresponds to a page in a single disk file. In default, the first page stores the root node of C-tree. Leaf node keeps a certain number of classification points in RSM space. Each classification point corresponds to another page which keeps resource locations like file path and URI (Uniform Resource Identifier). C-tree extends R-tree to index the underlying multidimen-sional bit string space where there is no linear order but hierarchy rela-tionships between coordinates. 