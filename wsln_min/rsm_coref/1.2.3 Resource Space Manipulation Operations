The Merge operation makes resource spaces RS1, …, and RSn at URSL1, …, and URSLn respectively into one resource space RS subject to any specified conditions and places one resource space RS at URSL.  The Merge operation can be represented by the following command, where |RSi| is the number of axes of resource space RSi and Xik(RSj) represents that axis Xik of RSn is to be merged (i=1, ..., n).  The constraint clause specifies common_axis_number as the constraint name.  The predicate of the check clause is the constraint of The Merge operation. The Merge operation  RS1, …, RSn  [AT  URSL1, …, URSLn] INTO  RS  [AT  URSL] WHERE  new_axis (RS) = X1μ(RS1) È …È Xnν(RSn) CONSTRAINT  axis_number  CHECK  RS1 = … = |RSn| = |RS| CONSTRAINT  common_axis_number CHECK  number (common_axes) = |RS| –1. 
The split operation separates a resource space RS at URSL into each RSi at each URSLi.  The axis X of a resource space RS at URSL will be separated into X1i (RS1), …, and Xnj(RSn).  The Split command is represented as follows, where the check clause requires that no coordinate or axis be removed in The split operation. SPLIT  RS  [AT  URSL] INTO  RS1, …, RSn [AT  URSL, …, URSLn] WHERE X (RS) JOIN-INTO X1i (RS1) RS1= <coordinate_set1> & … & Xnj (RSn) = <coordinate_setn> CONSTRAINT  axis_split CHECK  X (RS) = X1i (RS1) RS1∪…∪Xnj (RSn) 
If resource spaces RS1, …, and RSn store the same type of resources and resource spaces RS1, …, and RSn have k ( k  [1, minimum(|RS1|, |RS2|)] ) common axes, then resource spaces RS1, …, and RSn can be joined into one resource space RS such that resource spaces RS1, …, and RSn RSn share k ( k  [1, minimum(|RS1|, |RS2|)] ) common axes and |RS| = |RS1| + |RS2| – k.  The join operation can be represented as follows: 