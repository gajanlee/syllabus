R-tree can be seen as the multidimensional version of B-tree. Points nearby in the space are grouped together in the same leaf node. Hence each leaf node corresponds to a Minimum Bounding Rectangle (MBR) of the points inside each leaf node. Leaf nodes with nearby MBRs are grouped together again to form the next upper level. This procedure continues until only one node is remaining which is made as the root node. Fig. 6.9 depicts an example of R-tree. 
Nowadays, R-tree has already become a design rationale of spatial in-dex structures, far more than just a specific indexing tree. R-tree has three basic components: MBR format, INSERT_POLICY, and SPLIT_POLICY. MBR format is usually a hyper-rectangle or hyper-sphere in conventional multidimensional access methods. MBR format should have certain transitivity property, say, spatial containment relationship. The two policies follow the good standards like the minimization of blank space, overlap area and area margin. Usually, distinct definitions of these four components lead to different spatial index trees, such as R+-tree, R*-tree, etc.  
Procedures for resource operations are generally as follows. 