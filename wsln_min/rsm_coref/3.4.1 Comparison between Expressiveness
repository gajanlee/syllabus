Given two operations op1 and op2 on two resource spaces RS1 and RS2, suppose op1 is unary and op2 is binary. We use op1 (RS1) to represent the result of RS1 under op1, and use RS1 op2RS2 to represent the re-sult of two resource spaces RS1 and RS2 RS2 under operation op2. Then, all the resource spaces we can get from the set {RS1, RS2} under the set { op1, op2} can be listed as follows: {op1 (RS1), op1(RS2), RS1op2RS2, op1 (RS1), op1 (op1(RS2), op1(RS1 op2 RS2), ¼}. Then, a definition can be given as follows: 
Definition 3.5 Given a set of resource spaces RSS and a set of operations OP on a set of resource spaces RSS, we define RSSOP as all the resource spaces that can be got from a set of resource spaces RSS under a sequence of operations in OP. 
In general cases, when RSS and OP are both finite, RSSOP is also finite. For example, for RSS={RS1, RS2}, if OPs={È, Ç}, then RSSOPs ={RS1, RS2, RS1ÈRS2, RS1ÇRS2}; if OPt={È}, then RSS OPt={RS1, RS2, RS1ÈRS2}. This example is very simple, but in many cases, it is not easy to compute RSSOP given RSS and OPOP. For example, for RSS ={RS1, RS2} and OP={-}, one may think that RSSOP ={RS1-RS2, RS2-RS1}. But in fact, RS1- RS1=Æ, RS1-Æ =RS1, RS2-Æ =RS2 and RS1- (RS1- RS2)= RS1Ç RS2, now the generated spaces are {Æ, RS1 , RS2, RS1-RS2, RS2-RS1, RS1ÇRS2}. Are there more spaces that can be generated? The answer is no, because the results of these six spaces under the operation ‘-’ are also included by the results of these six spaces under the operation ‘-’, for example, RS1- (RS1ÇRS2)=RS1- RS2.  So in fact now RSSOP ={Æ, RS1, RS2, RS1-RS2, RS2-RS1, RS1ÇRS2}. 
Intuitively, given any set of resource spaces RSS, if operation set OPs can get more results than OPt, i.e., RSS Ops  RSS OPt, then we can say that the expressiveness of OPs is stronger than OPt. So a definition can be given as follows: 
Definition 3.6 Given two operation sets OPs and OPt on resource spaces, the expressiveness of OPs is stronger (weaker) than OPt, denoted by OPs>OPt (OPs<OPt), if for any given set of resource spaces RSS, OPs RSS OPt (OPs RSS OPt) holds. 
Here the “more results” does not mean the whole quantity of data in the result spaces, but the number of different spaces in the result spaces. For example, for RSS ={ RS1 , RS2}, OPs={, } and OPt={},  we have RSSOPs ={RS1, RS2, RS1RS2, RS1RS2} and RSSOPt ={RS1, RS2, RS1RS2}. The whole quantities of data are all of the resources included in RS1RS2, but OPs={ gets one more result RS1RS2, so we say that the expressiveness of OPs={ is much stronger than OPs={. 