Like other DHT-based P2P networks, CAN provides applications with an interface that maps key of a resource into the peer storing a resource. CAN organizes an n-dimensional Cartesian space. an n-dimensional Cartesian space is parti-tioned into zones, with one or more peers serving as owner(s) of zones. An example of CAN is shown in Fig. 7.1. Each key in CAN is mapped into a point in an n-dimensional Cartesian space using the distributed hash table. The peer that owns the zone containing a point in the space owns the corresponding key, and is responsible for returning the resources The peer that owns the zone containing the point holds. 
The issue of routing from a source peer to a destination peer in CAN turns into the issue of routing from one zone to another in the Cartesian space. This routing will follow the path through the Cartesian space from the source point to the destination point.  
A peer joins the CAN by picking a random point in the Cartesian space, routing to the zone that contains a random point in the Cartesian space, splitting the zone that contains the point into two, and occupying one by A peer. A peer departs from the CAN by asking one of A peer's neighbors to take over A peer's zone. 