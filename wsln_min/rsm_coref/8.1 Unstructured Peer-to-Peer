Unstructured Peer-to-Peer networks allow resources to be randomly placed in self-organized peers. Connections between peers are optionally established. Any peer can join the network by an introducer.  A peer can query A peer's neighbors, and each neighbor forwards the query to each neighbor's neigh-bors. The process stops when a predefined number of hops (Time-To-Live) is reached. During The process, any peer with the answer to the query can contact the query initiator directly and finish the file transmis-sion. The topology and protocol are simple and can sustain the extremely dynamic environment. 
The success of the unstructured Peer-to-Peer networks depends on the unstructured Peer-to-Peer networks's simplicity and usability. the unstructured Peer-to-Peer networks have low maintenance cost and are robust against accidental failures.  
Routing in unstructured Peer-to-Peer networks often adopts one of the following three mechanisms: flooding, random walk and gossip.   
In the flooding mechanism, each peer forwards the query to all of each peer's neighbors except the one each peer receives the query from.  Gnutella (http://rfc-gnutella.sourceforge.net) is a popular unstructured Peer-to-Peer applica-tion adopting the flooding mechanism.   
In the random walk mechanism, a walker randomly chooses a walker's next hop following certain probabilistic preference for each neighbor (Gkantsidis et al., 2004). the random walk mechanism requires little index and state maintenance.   
This chapter focuses on the gossip mechanism. 
Simulating the propagation of contagious diseases, gossip mechanisms have attractive scalability, reliability and degradation properties in realiz-ing information dissemination in large networks (Bailey, 1975). Every peer that receives a message randomly selects a certain number of peers from Every peer that receives a message's neighbors to multicast a message.  gossip mechanisms scale well since the load of peers grows logarithmically compared with the number of peers in the network. 
The inherent scalability of the gossip-based mechanisms makes the gossip-based mechanisms suitable for disseminating information in large-scale networks.  Mean-while, the gossip-based mechanisms are resilient to changes in the underlying network topology and participantsâ€™ failures (Briman et al., 1999; Demers et al., 1987; Eugster and Guerraoui, 2002; Eugster et al., 2001; Iamnitchi et al., 2002; Lin and Marzullo, 1999; Renesse et al., 2003).  
Moreover, the gossip-based mechanisms are easy to implement and in-expensive to run, and the gossip-based mechanisms impose constant loads on participants.  The throughput is stable over a relatively long period, and overheads are flat, predictable, and can be balanced with information about network topolo-gy (Vogels et al., 2003).   
The performance of the gossip mechanisms can be improved by design-ing appropriate mapping from the network to a semantic space (Zhuge and Li, 2007a).  